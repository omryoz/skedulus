<?php
/* Manage Home Controller */
class Home extends CI_Controller {

	function __construct(){
		parent::__construct();
		$this->load->helper('form');
		$this->load->library('parser');
		$this->load->helper('url');
		$this->load->library('email');
		$this->load->model('home_model');
		$this->load->model('common_model');
		$this->data['bodyclass']='index';
		$this->load->library('form_validation');
		$this->load->library('session');
    }
	
	public function index() {
		$this->parser->parse('include/header',$this->data);
		$this->parser->parse('general/home',$this->data);
		$this->parser->parse('include/footer',$this->data);
	}
	
	public function businesslogin(){
	$this->data['userRole']="businesslogin";
	$this->data['signUp']="businessSignUp";
	if(isset($_GET['activation_link'])){
	   $this->home_model->updateUser();
	}
	if(isset($_GET['checkinfo'])){
		$password= MD5($_POST['password']);
		 $where=" And password='".$password."' AND user_role='manager' and status='active'";
		 $values=$this->common_model->getRow("users","email",$_POST['email'],$where);
		 
		 if($values==""){
		 $this->data['failure']="Failure";
		 $this->parser->parse('include/meta_tags',$this->data);
		 $this->parser->parse('general/login',$this->data);
		 }else{
		
		 $sessionVal=array(
			 'id'=>$values->id,
			 'username'=>$values->first_name."".$values->last_name,
			 'email'=>$values->email
		 );
		 $this->session->set_userdata($sessionVal);
		 redirect('business_registration');
		 }
		}else{
		$this->parser->parse('include/meta_tags',$this->data);
		$this->parser->parse('general/login',$this->data);
		}
	}
	
	public function clientlogin(){
	   $this->data['userRole']="clientlogin";
		$this->data['signUp']="clientSignUp";
		if(isset($_GET['checkinfo'])){
		$password= MD5($_POST['password']);
		 $where=" And password='".$password."' AND user_role='client' and status='active'";
		 $values=$this->common_model->getRow("users","email",$_POST['email'],$where);
		 if($values==""){
		 $this->data['failure']="Failure";
		 $this->parser->parse('include/meta_tags',$this->data);
		$this->parser->parse('general/login',$this->data);
		 }else{
		  $sessionVal=array(
			 'id'=>$values->id,
			 'username'=>$values->first_name."".$values->last_name,
			 'email'=>$values->email
		 );
		 $this->session->set_userdata($sessionVal);
		 redirect('cprofile');
		 }
		}else{
		$this->parser->parse('include/meta_tags',$this->data);
		$this->parser->parse('general/login',$this->data);
		}
	}
	
	
	public function businessSignUp(){
	$this->data['userRole']="businessSignUp";
	$this->data['signUp']="businesslogin";
	if(isset($_GET['checkino'])){
	   $validation = array(
                    array('field' => 'firstname','class'=>'required' , 'label' => 'First name', 'rules' => 'required'),
					array('field' => 'lastname', 'label' => 'Last name', 'rules' => 'required'),
					array('field' => 'gender', 'label' => 'Gender', 'rules' => 'required'),
					array('field' => 'email', 'label' => 'Email', 'rules' => 'required|valid_email|callback_check_email'),
					array('field' => 'password', 'label' => 'Password', 'rules' => 'required|min_length[6]'),
					array('field' => 'month', 'label' => 'Month', 'rules' => ''),
					array('field' => 'year', 'label' => 'Year', 'rules' => ''),
					array('field' => 'day', 'label' => 'Day', 'rules' => ''),
                );
		 $this->form_validation->set_rules($validation);
		 if ($this->form_validation->run() == TRUE) {
			 $id=$this->home_model->insertinfo();
			 $this->account_activation($id);
			 $this->data['success']="successfull";
			 $this->data['reset'] = TRUE;
			 $this->parser->parse('include/meta_tags',$this->data);
			 $this->load->view('general/signup',$this->data);
		}else{
		    $this->data['reset'] = FALSE;
			$this->parser->parse('include/meta_tags',$this->data);
			$this->load->view('general/signup',$this->data);
		}
	}else{
	  $this->data['reset'] = FALSE;
	  $this->parser->parse('include/meta_tags',$this->data);
	  $this->load->view('general/signup',$this->data);
	}
}
	public function clientSignUp(){
	$this->data['userRole']="clientSignUp";
	$this->data['signUp']="clientlogin";
	if(isset($_GET['checkino'])){
	   $validation = array(
                    array('field' => 'firstname','class'=>'required' , 'label' => 'First name', 'rules' => 'required'),
					array('field' => 'lastname', 'label' => 'Last name', 'rules' => 'required'),
					array('field' => 'gender', 'label' => 'Gender', 'rules' => 'required'),
					array('field' => 'email', 'label' => 'Email', 'rules' => 'required|valid_email|callback_check_email'),
					array('field' => 'password', 'label' => 'Password', 'rules' => 'required|min_length[6]'),
					array('field' => 'month', 'label' => 'Month', 'rules' => ''),
					array('field' => 'year', 'label' => 'Year', 'rules' => ''),
					array('field' => 'day', 'label' => 'Day', 'rules' => ''),
                );
		 $this->form_validation->set_rules($validation);
		 if ($this->form_validation->run() == TRUE) {
		 $id=$this->home_model->insertinfo();
		 $this->parser->parse('include/meta_tags',$this->data);
		 $this->data['reset'] = TRUE;
		 $this->data['clientsuccess']="successfull";
		 $this->load->view('general/signup',$this->data);
		}else{
		 $this->data['reset'] = FALSE;
		 $this->parser->parse('include/meta_tags',$this->data);
		 $this->load->view('general/signup',$this->data);
		}
	}else{
	  $this->data['reset'] = FALSE;
	  $this->parser->parse('include/meta_tags',$this->data);
	  $this->load->view('general/signup',$this->data);
	}
}
	
	public function account_activation($id){
	    $this->load->library( 'email' );
		$config['mailtype'] = 'html';
		$config['protocol'] = 'sendmail';
	    $userdetails= $this->common_model->getRow("users","id",$id);
	    $this->data['name'] = $userdetails->first_name." ".$userdetails->last_name;
		$this->data['activation_key'] = $userdetails->activationkey;
		$this->data['email'] = $userdetails->email; 
		//Get email 
		$this->email->initialize($config);
		$this->email->from('swathi.n@eulogik.com', 'swathi');
		$this->email->to($this->data['email']); 
		$this->email->subject('Account Activation');
		$message=$this->load->view('account_activation',$this->data,TRUE);
        $this->email->message($message);  		
		$this->email->send();
		$this->email->print_debugger();
	}
	
	
	public function check_email($email){
	  $isDuplicate=$this->common_model->getRow("users","email",$email);
	  if($isDuplicate){
		$this->form_validation->set_message('check_email', 'This email id already exist.');
			return false;
	  }else{
			return true;
		}
	
	}
	
	public function logout(){
		$this->session->sess_destroy();
		redirect('home');
	}
	
	
}

?>
